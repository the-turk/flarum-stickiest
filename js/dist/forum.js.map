{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAY,I,aCA7D,MAAM,EAA+BF,OAAOC,KAAKC,OAAc,M,aCA/D,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,qB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,wC,aCAzC,SAASC,EAAgBhB,EAAGiB,GAKzC,OAJAD,EAAkBf,OAAOiB,eAAiBjB,OAAOiB,eAAeC,OAAS,SAAyBnB,EAAGiB,GAEnG,OADAjB,EAAEoB,UAAYH,EACPjB,CACR,EACMgB,EAAgBhB,EAAGiB,EAC3B,CCLc,SAASI,EAAeC,EAAUC,GAC/CD,EAASf,UAAYN,OAAOuB,OAAOD,EAAWhB,WAC9Ce,EAASf,UAAUkB,YAAcH,EACjCJ,EAAeI,EAAUC,EAC1B,CCLD,MAAM,EAA+BV,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,8B,ICUnCW,EAAAA,SAAAA,G,oFACnBC,KAAA,WACE,OAAOC,IAAAA,MAAAA,UAAoB,uBAC5B,E,EAEDC,eAAA,WACE,OAAOC,KAAKC,MAAMC,KAAKC,UAAUC,UAC7B,sEACA,sEACL,E,EATkBR,C,MAAoCS,ICVzD,MAAM,EAA+BtB,OAAOC,KAAKC,OAAe,OCA1D,EAA+BF,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,qB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,wB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,kB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCgBnCqB,EAAAA,SAAAA,G,oFACnBC,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAEb,IAAMC,EAAaT,KAAKC,MAAMQ,WACxBC,EAAiBD,EAAWE,OAC5BC,EAAaC,IAAOJ,EAAWG,aAAaE,QAAO,SAACC,GAAD,OAASL,EAAeM,QAAQD,IAAQ,CAAxC,KAA8C,IAEvGf,KAAKiB,SAAWJ,IAAOJ,EAAWQ,aAAc,GAChDjB,KAAKkB,YAAcL,IAAOJ,EAAWS,gBAAiB,GACtDlB,KAAKmB,YAAcN,IAAOJ,EAAWU,gBAAiB,GAElDP,IAAaQ,OAAS,EACxBpB,KAAKqB,SAAWC,IAASV,KAAcW,KAAI,SAACR,GAAD,OAASA,EAAIS,MAAb,IAE3CxB,KAAKqB,SAAWC,IAASZ,GAAgBa,KAAI,SAACR,GAAD,OAASA,EAAIS,MAAb,GAEhD,E,EAEDC,UAAA,WACE,MAAO,gBACR,E,EAEDC,MAAA,WACE,OAAO5B,IAAAA,WAAAA,MAAqB,iDAAkD,CAAE4B,MAAO,YAAK1B,KAAKC,MAAMQ,WAAWiB,UACnH,E,EAEDvB,QAAA,WACE,MAAO,CACL,SAAKsB,UAAU,cACb,SAAKA,UAAU,QAAQzB,KAAK2B,aAAaC,YAE3C,SAAKH,UAAU,gBAAgBzB,KAAK6B,eAAeD,WAEtD,E,EAEDD,WAAA,WAAa,WACLG,EAAQ,IAAIC,KAgElB,OA9DAD,EAAME,IACJ,SACA,SAAKP,UAAU,cACZQ,IAAAA,UACC,CACEC,QAASC,OAAOnC,KAAKiB,YACrBmB,SAAU,SAACtD,IACK,IAAVA,IAAgB,EAAKoC,YAAc,EAAKC,YAAcN,KAAO,IAEjE,EAAKI,SAAWJ,IAAO/B,EACxB,GAEHgB,IAAAA,WAAAA,MAAqB,0DAGvB,SAAK2B,UAAU,YAAY3B,IAAAA,WAAAA,MAAqB,0DAElD,IAGEE,KAAKC,MAAMQ,WAAW4B,gBACxBP,EAAME,IACJ,YACA,SAAKP,UAAU,cACZQ,IAAAA,UACC,CACEC,QAASC,OAAOnC,KAAKkB,eACrBkB,SAAU,SAACtD,IACK,IAAVA,IAAgB,EAAKmC,SAAWJ,KAAO,IAC3C,EAAKK,YAAcL,IAAO/B,EAC3B,GAEHgB,IAAAA,WAAAA,MAAqB,gEAGvB,SAAK2B,UAAU,YAAY3B,IAAAA,WAAAA,MAAqB,gEAElD,IAIAE,KAAKC,MAAMQ,WAAW6B,gBACxBR,EAAME,IACJ,YACA,SAAKP,UAAU,cACZQ,IAAAA,UACC,CACEC,QAASC,OAAOnC,KAAKmB,eACrBiB,SAAU,SAACtD,IACK,IAAVA,IAAgB,EAAKmC,SAAWJ,KAAO,IAC3C,EAAKM,YAAcN,IAAO/B,EAC3B,GAEHgB,IAAAA,WAAAA,MAAqB,8DAGvB,SAAK2B,UAAU,YAAY3B,IAAAA,WAAAA,MAAqB,8DAElD,IAIGgC,CACR,E,EAEDD,aAAA,WAAe,WACPC,EAAQ,IAAIC,KAgDlB,OA9CI/B,KAAKC,MAAMQ,WAAW6B,gBAAkBtC,KAAKmB,eAC/CW,EAAME,IACJ,OACA,SAAKP,UAAU,kCACb,eAAQ3B,IAAAA,WAAAA,MAAqB,wDAC7B,aACGE,KAAKC,MAAMQ,WAAWE,OAAOY,KAAI,SAACR,GAAD,OAChC,WAAOU,UAAU,YACf,WACEc,KAAK,WACLC,QAAS,EAAKnB,SAASL,QAAQD,EAAIS,SAAW,EAC9CY,SAAU,SAACK,GACT,IAAIA,EAAEC,OAAOF,SAAa,EAAKnB,SAASL,QAAQD,EAAIS,SAAW,GAExD,IAAKiB,EAAEC,OAAOF,QAAS,CAC5B,IAAMG,EAAQ,EAAKtB,SAASL,QAAQD,EAAIS,QACpCmB,GAAS,GAAG,EAAKtB,SAASuB,OAAOD,EAAO,EAC7C,OAJC,EAAKtB,SAASwB,KAAK9B,EAAIS,OAK1B,EACDsB,UAAW/B,EAAIgC,uBAEhBC,IAAQjC,GAdX,IAckBA,EAAIkC,OAfU,MAoBtC,IAIJnB,EAAME,IACJ,SACA,SAAKP,UAAU,cACZyB,IAAAA,UACC,CACEzB,UAAW,SACXc,KAAM,SACNY,QAASnD,KAAKmD,QACdL,SAAU9C,KAAKmB,iBAAmBnB,KAAKqB,SAASD,OAAS,IAE3DtB,IAAAA,WAAAA,MAAqB,6DAGxB,IAGIgC,CACR,E,EAEDsB,aAAA,WACEpD,KAAKqD,KAAKhE,KAAKW,KAAfA,GAEIF,IAAAA,QAAAA,QAAoBwD,iBACtBxD,IAAAA,QAAAA,IAAgB,UAAUyD,SAG5BC,EAAEC,QACH,E,EAEDC,cAAA,WAAgB,WACd1D,KAAKC,MAAMQ,WACRkD,KACC,CACEzC,aAAclB,KAAKiB,YAAcjB,KAAKkB,eAExC,CAAE0C,aAAc5D,KAAK6D,QAAQxE,KAAKW,QAEnC8D,KAAK9D,KAAKoD,aAAa/D,KAAKW,OAP/B,OAQS,WACL,EAAKmD,SAAU,EACfK,EAAEC,QACH,GACJ,E,EAEDM,SAAA,SAAStB,GAAG,WACVA,EAAEuB,iBAEFhE,KAAKmD,SAAU,EAEfnD,KAAKC,MAAMQ,WACRkD,KACC,CACE1C,UAAWjB,KAAKkB,gBAAkBlB,KAAKmB,eAAiBnB,KAAKiB,YAE/D,CAAE2C,aAAc5D,KAAK6D,QAAQxE,KAAKW,QAEnC8D,MAAK,WACA,EAAK7D,MAAMQ,WAAW6B,eACxB,EAAKrC,MAAMQ,WACRkD,KACC,CACExC,aAAc,EAAKF,YAAc,EAAKE,eAAiB,EAAKE,SAASD,OAAS,EAC9EC,SAAU,EAAKF,cAAgB,EAAKE,SAAW,GAC/C4C,cAAe,CACbrD,WAAY,EAAKO,cAAgB,EAAKlB,MAAMQ,WAAWE,OAAOG,QAAO,SAACC,GAAD,OAAS,EAAKM,SAASL,QAAQD,EAAIS,SAAW,CAA9C,IAAmD,KAG5H,CAAEoC,aAAc,EAAKC,QAAQxE,KAAK,KAEnCyE,MAAK,WACA,EAAK7D,MAAMQ,WAAW4B,eACxB,EAAKqB,cAAcrE,KAAK,EAAxB,GAEA,EAAK+D,aAAa/D,KAAK,EAAvB,EAEH,IAjBH,OAkBS,WACL,EAAK8D,SAAU,EACfK,EAAEC,QACH,IACM,EAAKxD,MAAMQ,WAAW4B,gBAC/B,EAAKqB,cAAcrE,KAAK,EAAxB,EAEH,IAlCH,OAmCS,WACL,EAAK8D,SAAU,EACfK,EAAEC,QACH,GACJ,E,EAjOkBnD,CAAuB4D,KChB5C,MAAM,EAA+BnF,OAAOC,KAAKC,OAAO,oC,aCoBxDa,IAAAA,aAAAA,IACE,sBACA,WACEA,IAAAA,eAAAA,wBAA6CF,EAE7CuE,IAAAA,UAAAA,YAAmCC,IAAAA,UAAgB,eACnDD,IAAAA,UAAAA,YAAmCC,IAAAA,UAAgB,eACnDD,IAAAA,UAAAA,aAAoCC,IAAAA,UAAgB,gBACpDD,IAAAA,UAAAA,aAAoCC,IAAAA,UAAgB,gBACpDD,IAAAA,UAAAA,WAAkCC,IAAAA,QAAc,eChBlDC,EAAAA,EAAAA,QAAOF,IAAAA,UAAsB,UAAU,SAAUG,GAC/CA,EAAOC,IAAI,WAAYD,EAAOE,OAAO,WAEhCxE,KAAKiB,aAAcjB,KAAKmB,eAAmBnB,KAAKkB,eACnDoD,EAAOtC,IACLhC,KAAKmB,cAAgB,aAAe,SACpCsD,IAAAA,UAAgB,CACdlC,KAAM,SACNmC,MAAO1E,KAAKmB,cACRrB,IAAAA,WAAAA,MAAqB,qDACrBA,IAAAA,WAAAA,MAAqB,iDACzBD,KAAM,qBAER,GAGL,KChBDwE,EAAAA,EAAAA,QAAOF,IAAAA,UAAsB,UAAU,SAAUG,GAC3CtE,KAAKkB,eACPoD,EAAOtC,IACLhC,KAAKmB,cAAgB,gBAAkB,YACvCsD,IAAAA,UAAgB,CACdlC,KAAM,YACNmC,MAAO1E,KAAKmB,cACRrB,IAAAA,WAAAA,MAAqB,2DACrBA,IAAAA,WAAAA,MAAqB,uDACzBD,KAAMC,IAAAA,MAAAA,UAAoB,0BAE5B,GAGL,KCbDuE,EAAAA,EAAAA,QAAOM,IAAoB,sBAAsB,SAAU7C,EAAOrB,GAC5DA,EAAWmE,cAAgBnE,EAAW4B,gBAAkB5B,EAAW6B,kBACjER,EAAMyC,IAAI,WAAWzC,EAAM0C,OAAO,UAEtC1C,EAAME,IACJ,SACAkB,IAAAA,UACE,CACErD,KAAM,mBACNgF,QAAS,kBAAM/E,IAAAA,MAAAA,KAAeQ,EAAgB,CAAEG,WAAAA,GAAvC,GAEXX,IAAAA,WAAAA,MAAqB,gEAI5B,KCzBCuE,EAAAA,EAAAA,QAAOS,IAAAA,UAA+B,iBAAiB,SAAUC,GAC7DA,EAAOC,QAAQnC,KAAK,cACpBkC,EAAOC,QAAQnC,KAAK,aACvB,KJ6BDwB,EAAAA,EAAAA,QAAOY,IAAAA,UAA8B,YAAY,SAACC,EAAK1E,GACrD,IAAM2E,EAAkBC,EAAE5E,EAAM6E,KAAKC,KAAK,+BAGpCC,EAAUJ,EAAgBG,KAAK,gBAC/BE,EAAaL,EAAgBG,KAAK,oBAClCG,EAAaN,EAAgBG,KAAK,mBAClCI,EAAgBP,EAAgBG,KAAK,uBAEvCC,EAAQnE,QACVmE,EAAQI,QAAQ,uBAAuBC,SAAS,wBAG9CJ,EAAWpE,QACboE,EAAWG,QAAQ,uBAAuBC,SAAS,2BAGjDH,EAAWrE,QACbqE,EAAWE,QAAQ,uBAAuBC,SAAS,2BAGjDF,EAActE,QAChBsE,EAAcC,QAAQ,uBAAuBC,SAAS,6BAEzD,GACF,IACA,E","sources":["webpack://@the-turk/flarum-stickiest/webpack/bootstrap","webpack://@the-turk/flarum-stickiest/webpack/runtime/compat get default export","webpack://@the-turk/flarum-stickiest/webpack/runtime/define property getters","webpack://@the-turk/flarum-stickiest/webpack/runtime/hasOwnProperty shorthand","webpack://@the-turk/flarum-stickiest/webpack/runtime/make namespace object","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['common/extend']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['app']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['Model']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['models/Discussion']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['common/components/DiscussionListItem']\"","webpack://@the-turk/flarum-stickiest/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@the-turk/flarum-stickiest/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['forum/app']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['forum/components/EventPost']\"","webpack://@the-turk/flarum-stickiest/./src/forum/components/DiscussionSuperStickiedPost.js","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['extend']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['components/Badge']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['common/components/Button']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['components/Modal']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['components/Button']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['tags/helpers/tagIcon']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['tags/utils/sortTags']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['utils/Stream']\"","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@the-turk/flarum-stickiest/./src/forum/components/StickiestModal.js","webpack://@the-turk/flarum-stickiest/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@the-turk/flarum-stickiest/./src/forum/index.js","webpack://@the-turk/flarum-stickiest/./src/forum/addStickyBadge.js","webpack://@the-turk/flarum-stickiest/./src/forum/addStickiestBadge.js","webpack://@the-turk/flarum-stickiest/./src/forum/addStickyControl.js","webpack://@the-turk/flarum-stickiest/./src/forum/addStickyApiInclude.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/DiscussionListItem'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/EventPost'];","/*\n * This file is part of Stickiest.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/forum/app';\nimport EventPost from 'flarum/forum/components/EventPost';\n\nexport default class DiscussionSuperStickiedPost extends EventPost {\n  icon() {\n    return app.forum.attribute('stickiest.badge_icon');\n  }\n\n  descriptionKey() {\n    return this.attrs.post.content().stickiest\n      ? 'the-turk-stickiest.forum.post_stream.discussion_super_stickied_text'\n      : 'the-turk-stickiest.forum.post_stream.discussion_common_stickied_text';\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/helpers/tagIcon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/utils/sortTags'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","/*\n * This file is part of Stickiest.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport tagIcon from 'flarum/tags/helpers/tagIcon';\nimport sortTags from 'flarum/tags/utils/sortTags';\nimport ItemList from 'flarum/utils/ItemList';\nimport Stream from 'flarum/utils/Stream';\nimport Switch from 'flarum/common/components/Switch';\n\nexport default class StickiestModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    const discussion = this.attrs.discussion;\n    const discussionTags = discussion.tags();\n    const stickyTags = Stream(discussion.stickyTags().filter((tag) => discussionTags.indexOf(tag) > -1) || []);\n\n    this.isSticky = Stream(discussion.isSticky() || false);\n    this.isStickiest = Stream(discussion.isStickiest() || false);\n    this.isTagSticky = Stream(discussion.isTagSticky() || false);\n\n    if (stickyTags().length > 0) {\n      this.tagSlugs = sortTags(stickyTags()).map((tag) => tag.slug());\n    } else {\n      this.tagSlugs = sortTags(discussionTags).map((tag) => tag.slug());\n    }\n  }\n\n  className() {\n    return 'StickiestModal';\n  }\n\n  title() {\n    return app.translator.trans('the-turk-stickiest.forum.stickiest_modal.title', { title: <em>{this.attrs.discussion.title()}</em> });\n  }\n\n  content() {\n    return [\n      <div className=\"Modal-body\">\n        <div className=\"Form\">{this.bodyFields().toArray()}</div>\n      </div>,\n      <div className=\"Modal-footer\">{this.footerFields().toArray()}</div>,\n    ];\n  }\n\n  bodyFields() {\n    const items = new ItemList();\n\n    items.add(\n      'sticky',\n      <div className=\"Form-group\">\n        {Switch.component(\n          {\n            state: !!Number(this.isSticky()),\n            onchange: (value) => {\n              if (value === true) this.isStickiest = this.isTagSticky = Stream(false);\n\n              this.isSticky = Stream(value);\n            },\n          },\n          app.translator.trans('the-turk-stickiest.forum.stickiest_modal.sticky_label')\n        )}\n\n        <div className=\"helpText\">{app.translator.trans('the-turk-stickiest.forum.stickiest_modal.sticky_text')}</div>\n      </div>,\n      30\n    );\n\n    if (this.attrs.discussion.canStickiest()) {\n      items.add(\n        'stickiest',\n        <div className=\"Form-group\">\n          {Switch.component(\n            {\n              state: !!Number(this.isStickiest()),\n              onchange: (value) => {\n                if (value === true) this.isSticky = Stream(false);\n                this.isStickiest = Stream(value);\n              },\n            },\n            app.translator.trans('the-turk-stickiest.forum.stickiest_modal.super_sticky_label')\n          )}\n\n          <div className=\"helpText\">{app.translator.trans('the-turk-stickiest.forum.stickiest_modal.super_sticky_text')}</div>\n        </div>,\n        20\n      );\n    }\n\n    if (this.attrs.discussion.canTagSticky()) {\n      items.add(\n        'tagSticky',\n        <div className=\"Form-group\">\n          {Switch.component(\n            {\n              state: !!Number(this.isTagSticky()),\n              onchange: (value) => {\n                if (value === true) this.isSticky = Stream(false);\n                this.isTagSticky = Stream(value);\n              },\n            },\n            app.translator.trans('the-turk-stickiest.forum.stickiest_modal.tag_sticky_label')\n          )}\n\n          <div className=\"helpText\">{app.translator.trans('the-turk-stickiest.forum.stickiest_modal.tag_sticky_text')}</div>\n        </div>,\n        10\n      );\n    }\n\n    return items;\n  }\n\n  footerFields() {\n    const items = new ItemList();\n\n    if (this.attrs.discussion.canTagSticky() && this.isTagSticky()) {\n      items.add(\n        'tags',\n        <div className=\"Form-group StickiestModal-tags\">\n          <label>{app.translator.trans('the-turk-stickiest.forum.stickiest_modal.tags_label')}</label>\n          <div>\n            {this.attrs.discussion.tags().map((tag) => (\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={this.tagSlugs.indexOf(tag.slug()) > -1}\n                  onchange={(e) => {\n                    if (e.target.checked && !(this.tagSlugs.indexOf(tag.slug()) > -1)) {\n                      this.tagSlugs.push(tag.slug());\n                    } else if (!e.target.checked) {\n                      const index = this.tagSlugs.indexOf(tag.slug());\n                      if (index > -1) this.tagSlugs.splice(index, 1);\n                    }\n                  }}\n                  disabled={!tag.canStartDiscussion()}\n                />\n                {tagIcon(tag)} {tag.name()}\n              </label>\n            ))}\n          </div>\n        </div>,\n        10\n      );\n    }\n\n    items.add(\n      'submit',\n      <div className=\"Form-group\">\n        {Button.component(\n          {\n            className: 'Button',\n            type: 'submit',\n            loading: this.loading,\n            disabled: this.isTagSticky() && !(this.tagSlugs.length > 0),\n          },\n          app.translator.trans('the-turk-stickiest.forum.stickiest_modal.submit_button')\n        )}\n      </div>,\n      -10\n    );\n\n    return items;\n  }\n\n  applyChanges() {\n    this.hide.bind(this)();\n\n    if (app.current.matches(DiscussionPage)) {\n      app.current.get('stream').update();\n    }\n\n    m.redraw();\n  }\n\n  saveStickiest() {\n    this.attrs.discussion\n      .save(\n        {\n          isStickiest: !this.isSticky() && this.isStickiest(),\n        },\n        { errorHandler: this.onerror.bind(this) }\n      )\n      .then(this.applyChanges.bind(this))\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    this.attrs.discussion\n      .save(\n        {\n          isSticky: !this.isStickiest() && !this.isTagSticky() && this.isSticky(),\n        },\n        { errorHandler: this.onerror.bind(this) }\n      )\n      .then(() => {\n        if (this.attrs.discussion.canTagSticky()) {\n          this.attrs.discussion\n            .save(\n              {\n                isTagSticky: !this.isSticky() && this.isTagSticky() && this.tagSlugs.length > 0,\n                tagSlugs: this.isTagSticky() ? this.tagSlugs : [],\n                relationships: {\n                  stickyTags: this.isTagSticky() ? this.attrs.discussion.tags().filter((tag) => this.tagSlugs.indexOf(tag.slug()) > -1) : [],\n                },\n              },\n              { errorHandler: this.onerror.bind(this) }\n            )\n            .then(() => {\n              if (this.attrs.discussion.canStickiest()) {\n                this.saveStickiest.bind(this)();\n              } else {\n                this.applyChanges.bind(this)();\n              }\n            })\n            .catch(() => {\n              this.loading = false;\n              m.redraw();\n            });\n        } else if (this.attrs.discussion.canStickiest()) {\n          this.saveStickiest.bind(this)();\n        }\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","/*\n * This file is part of Stickiest.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extend } from 'flarum/common/extend';\n\nimport app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Discussion from 'flarum/models/Discussion';\n\nimport DiscussionListItem from 'flarum/common/components/DiscussionListItem';\nimport DiscussionSuperStickiedPost from './components/DiscussionSuperStickiedPost';\nimport addStickyBadge from './addStickyBadge';\nimport addStickiestBadge from './addStickiestBadge';\nimport addStickyControl from './addStickyControl';\nimport addStickyApiInclude from './addStickyApiInclude';\n\napp.initializers.add(\n  'the-turk-stickiest',\n  () => {\n    app.postComponents.discussionSuperStickied = DiscussionSuperStickiedPost;\n\n    Discussion.prototype.isStickiest = Model.attribute('isStickiest');\n    Discussion.prototype.isTagSticky = Model.attribute('isTagSticky');\n    Discussion.prototype.canStickiest = Model.attribute('canStickiest');\n    Discussion.prototype.canTagSticky = Model.attribute('canTagSticky');\n    Discussion.prototype.stickyTags = Model.hasMany('stickyTags');\n\n    addStickyBadge();\n    addStickiestBadge();\n    addStickyControl();\n    addStickyApiInclude();\n\n    extend(DiscussionListItem.prototype, 'oncreate', (out, vnode) => {\n      const $discussionItem = $(vnode.dom).find('.DiscussionListItem-content');\n\n      // select sticky discussions\n      const $sticky = $discussionItem.find('.item-sticky');\n      const $tagSticky = $discussionItem.find('.item-tag-sticky');\n      const $stickiest = $discussionItem.find('.item-stickiest');\n      const $tagStickiest = $discussionItem.find('.item-tag-stickiest');\n\n      if ($sticky.length) {\n        $sticky.closest('.DiscussionListItem').addClass('Stickiest-stickyItem');\n      }\n\n      if ($tagSticky.length) {\n        $tagSticky.closest('.DiscussionListItem').addClass('Stickiest-tagStickyItem');\n      }\n\n      if ($stickiest.length) {\n        $stickiest.closest('.DiscussionListItem').addClass('Stickiest-stickiestItem');\n      }\n\n      if ($tagStickiest.length) {\n        $tagStickiest.closest('.DiscussionListItem').addClass('Stickiest-tagStickiestItem');\n      }\n    });\n  },\n  -1\n);\n","/*\n * This file is part of Stickiest.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/forum/app';\nimport { extend } from 'flarum/extend';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\n\nexport default function addStickyBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    badges.has('sticky') ? badges.remove('sticky') : '';\n\n    if ((this.isSticky() || this.isTagSticky()) && !this.isStickiest()) {\n      badges.add(\n        this.isTagSticky() ? 'tag-sticky' : 'sticky',\n        Badge.component({\n          type: 'sticky',\n          label: this.isTagSticky()\n            ? app.translator.trans('the-turk-stickiest.forum.badge.tag_sticky_tooltip')\n            : app.translator.trans('the-turk-stickiest.forum.badge.sticky_tooltip'),\n          icon: 'fas fa-thumbtack',\n        }),\n        10\n      );\n    }\n  });\n}\n","/*\n * This file is part of Stickiest.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/forum/app';\nimport { extend } from 'flarum/extend';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\n\nexport default function addStickiestBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    if (this.isStickiest()) {\n      badges.add(\n        this.isTagSticky() ? 'tag-stickiest' : 'stickiest',\n        Badge.component({\n          type: 'stickiest',\n          label: this.isTagSticky()\n            ? app.translator.trans('the-turk-stickiest.forum.badge.super_tag_sticky_tooltip')\n            : app.translator.trans('the-turk-stickiest.forum.badge.super_sticky_tooltip'),\n          icon: app.forum.attribute('stickiest.badge_icon'),\n        }),\n        10\n      );\n    }\n  });\n}\n","/*\n * This file is part of Stickiest.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport Button from 'flarum/common/components/Button';\nimport StickiestModal from './components/StickiestModal';\n\nexport default function addStickyControl() {\n  extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n    if (discussion.canSticky() && (discussion.canStickiest() || discussion.canTagSticky())) {\n      if (items.has('sticky')) items.remove('sticky');\n\n      items.add(\n        'sticky',\n        Button.component(\n          {\n            icon: 'fas fa-thumbtack',\n            onclick: () => app.modal.show(StickiestModal, { discussion }),\n          },\n          app.translator.trans('the-turk-stickiest.forum.discussion_controls.sticky_button')\n        )\n      );\n    }\n  });\n}\n","import {extend} from 'flarum/common/extend';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\n\nexport default function apiInclude() {\n    extend(DiscussionListState.prototype, 'requestParams', function (params) {\n        params.include.push('stickyTags');\n        params.include.push('stickyTags');\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","DiscussionSuperStickiedPost","icon","app","descriptionKey","this","attrs","post","content","stickiest","EventPost","StickiestModal","oninit","vnode","discussion","discussionTags","tags","stickyTags","Stream","filter","tag","indexOf","isSticky","isStickiest","isTagSticky","length","tagSlugs","sortTags","map","slug","className","title","bodyFields","toArray","footerFields","items","ItemList","add","Switch","state","Number","onchange","canStickiest","canTagSticky","type","checked","e","target","index","splice","push","disabled","canStartDiscussion","tagIcon","name","Button","loading","applyChanges","hide","DiscussionPage","update","m","redraw","saveStickiest","save","errorHandler","onerror","then","onsubmit","preventDefault","relationships","Modal","Discussion","Model","extend","badges","has","remove","Badge","label","DiscussionControls","canSticky","onclick","DiscussionListState","params","include","DiscussionListItem","out","$discussionItem","$","dom","find","$sticky","$tagSticky","$stickiest","$tagStickiest","closest","addClass"],"sourceRoot":""}